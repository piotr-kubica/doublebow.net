<?php

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $name
 * @property string $description
 * @property Doctrine_Collection $CategoryArticles
 * 
 * @method integer             getCategoryId()       Returns the current record's "category_id" value
 * @method string              getName()             Returns the current record's "name" value
 * @method string              getDescription()      Returns the current record's "description" value
 * @method Doctrine_Collection getCategoryArticles() Returns the current record's "CategoryArticles" collection
 * @method Category            setCategoryId()       Sets the current record's "category_id" value
 * @method Category            setName()             Sets the current record's "name" value
 * @method Category            setDescription()      Sets the current record's "description" value
 * @method Category            setCategoryArticles() Sets the current record's "CategoryArticles" collection
 * 
 * @package    doublebow
 * @subpackage model
 * @author     Piotr Kubica
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('CategoryArticle as CategoryArticles', array(
             'local' => 'category_id',
             'foreign' => 'category_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'name' => 'category_slug',
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($sluggable0);
    }
}