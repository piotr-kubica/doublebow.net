<?php

/**
 * BaseAuthor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $author_id
 * @property string $name
 * @property string $description
 * @property Doctrine_Collection $Articles
 * 
 * @method integer             getAuthorId()    Returns the current record's "author_id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getArticles()    Returns the current record's "Articles" collection
 * @method Author              setAuthorId()    Sets the current record's "author_id" value
 * @method Author              setName()        Sets the current record's "name" value
 * @method Author              setDescription() Sets the current record's "description" value
 * @method Author              setArticles()    Sets the current record's "Articles" collection
 * 
 * @package    doublebow
 * @subpackage model
 * @author     Piotr Kubica
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAuthor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('author');
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Article as Articles', array(
             'local' => 'author_id',
             'foreign' => 'author_id'));
    }
}