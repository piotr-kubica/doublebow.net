<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $article_id
 * @property string $title
 * @property string $abstract
 * @property blob $content
 * @property integer $author_id
 * @property timestamp $published
 * @property string $dynjs
 * @property string $dyncss
 * @property Author $Author
 * @property Doctrine_Collection $Comments
 * @property Doctrine_Collection $ArticleCategories
 * 
 * @method integer             getArticleId()         Returns the current record's "article_id" value
 * @method string              getTitle()             Returns the current record's "title" value
 * @method string              getAbstract()          Returns the current record's "abstract" value
 * @method blob                getContent()           Returns the current record's "content" value
 * @method integer             getAuthorId()          Returns the current record's "author_id" value
 * @method timestamp           getPublished()         Returns the current record's "published" value
 * @method string              getDynjs()             Returns the current record's "dynjs" value
 * @method string              getDyncss()            Returns the current record's "dyncss" value
 * @method Author              getAuthor()            Returns the current record's "Author" value
 * @method Doctrine_Collection getComments()          Returns the current record's "Comments" collection
 * @method Doctrine_Collection getArticleCategories() Returns the current record's "ArticleCategories" collection
 * @method Article             setArticleId()         Sets the current record's "article_id" value
 * @method Article             setTitle()             Sets the current record's "title" value
 * @method Article             setAbstract()          Sets the current record's "abstract" value
 * @method Article             setContent()           Sets the current record's "content" value
 * @method Article             setAuthorId()          Sets the current record's "author_id" value
 * @method Article             setPublished()         Sets the current record's "published" value
 * @method Article             setDynjs()             Sets the current record's "dynjs" value
 * @method Article             setDyncss()            Sets the current record's "dyncss" value
 * @method Article             setAuthor()            Sets the current record's "Author" value
 * @method Article             setComments()          Sets the current record's "Comments" collection
 * @method Article             setArticleCategories() Sets the current record's "ArticleCategories" collection
 * 
 * @package    doublebow
 * @subpackage model
 * @author     Piotr Kubica
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('article_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('abstract', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
        $this->hasColumn('content', 'blob', null, array(
             'type' => 'blob',
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('published', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('dynjs', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('dyncss', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Author', array(
             'local' => 'author_id',
             'foreign' => 'author_id'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'article_id',
             'foreign' => 'article_id'));

        $this->hasMany('CategoryArticle as ArticleCategories', array(
             'local' => 'article_id',
             'foreign' => 'article_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'name' => 'article_slug',
             'unique' => true,
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             ));
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'disable' => true,
             ),
             ));
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'abstract',
             ),
             ));
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
        $this->actAs($searchable0);
    }
}