<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $comment_id
 * @property string $author
 * @property timestamp $date
 * @property string $content
 * @property string $web
 * @property string $mail
 * @property integer $article_id
 * @property Article $Article
 * 
 * @method integer   getCommentId()  Returns the current record's "comment_id" value
 * @method string    getAuthor()     Returns the current record's "author" value
 * @method timestamp getDate()       Returns the current record's "date" value
 * @method string    getContent()    Returns the current record's "content" value
 * @method string    getWeb()        Returns the current record's "web" value
 * @method string    getMail()       Returns the current record's "mail" value
 * @method integer   getArticleId()  Returns the current record's "article_id" value
 * @method Article   getArticle()    Returns the current record's "Article" value
 * @method Comment   setCommentId()  Sets the current record's "comment_id" value
 * @method Comment   setAuthor()     Sets the current record's "author" value
 * @method Comment   setDate()       Sets the current record's "date" value
 * @method Comment   setContent()    Sets the current record's "content" value
 * @method Comment   setWeb()        Sets the current record's "web" value
 * @method Comment   setMail()       Sets the current record's "mail" value
 * @method Comment   setArticleId()  Sets the current record's "article_id" value
 * @method Comment   setArticle()    Sets the current record's "Article" value
 * 
 * @package    doublebow
 * @subpackage model
 * @author     Piotr Kubica
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('comment_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('author', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('content', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('web', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('mail', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('article_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Article', array(
             'local' => 'article_id',
             'foreign' => 'article_id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'date',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'disable' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}